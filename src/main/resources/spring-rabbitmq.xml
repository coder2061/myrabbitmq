<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:rabbit="http://www.springframework.org/schema/rabbit"
	xsi:schemaLocation="http://www.springframework.org/schema/context
						http://www.springframework.org/schema/context/spring-context-4.0.xsd
						http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
                        http://www.springframework.org/schema/rabbit
    					http://www.springframework.org/schema/rabbit/spring-rabbit-1.3.xsd">

	<!-- 加载资源文件 其中包含变量信息，必须在Spring配置文件的最前面加载，即第一个加载 -->
	<context:property-placeholder location="classpath:rabbitmq.properties" ignore-unresolvable="true" />
	<!-- 
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="classpath:rabbitmq.properties" />
	</bean>
	 -->

	<!-- 连接配置 -->
	<rabbit:connection-factory id="connectionFactory" host="${mq.host}" username="${mq.username}" password="${mq.password}" port="${mq.port}" />

	<!-- 通过指定下面的 admin 信息，当前 producer 中的 exchange 和 queue 会在 rabbitmq 服务器上自动生成-->
	<rabbit:admin id="admin1" connection-factory="connectionFactory" />

	<!-- durable:是否持久化； -->
	<!-- auto_delete: 当所有消费客户端连接断开后，是否自动删除； -->
	<!-- exclusive: 仅创建者可以使用的私有队列断开后，是否自动删除； -->
	<!-- declared-by:指定管理员，从而连接到相应的connectionFactory； -->

	<!-- 声明消息队列 -->
	<rabbit:queue id="queue1" name="queue1" durable="true" auto-declare="true" auto-delete="false" exclusive="false" declared-by="admin1">
		<rabbit:queue-arguments>
			<!-- 设置队列优先级；优先级值最好是 Integer 类型 -->
			<entry key="x-max-priority" value="1" value-type="java.lang.Integer" />
		</rabbit:queue-arguments>
	</rabbit:queue>

	<!-- 声明 direct 类型 exchange，即消息与一个特定的路由键完全匹配，才会转发 -->
	<rabbit:direct-exchange id="directExchange" name="directExchange" durable="true" auto-delete="false" declared-by="admin1">
		<!-- 设置消息队列匹配的 binding_key，可多重绑定 -->
		<rabbit:bindings>
			<rabbit:binding queue="queue1" key="debug" />
		</rabbit:bindings>
	</rabbit:direct-exchange>

	<!-- 消息监听器，queues：监听的队列，多个的话用逗号（,）分隔  -->
	<rabbit:listener-container connection-factory="connectionFactory" acknowledge="auto">
		<rabbit:listener queues="queue1" ref="consumer1" />
	</rabbit:listener-container>

	<rabbit:queue id="queue3" name="queue3" durable="true" auto-delete="false" exclusive="false" declared-by="admin1" />
	<rabbit:direct-exchange id="directExchange" name="directExchange" durable="true" auto-delete="false" declared-by="admin1">
		<rabbit:bindings>
			<rabbit:binding queue="queue3" key="info" />
		</rabbit:bindings>
	</rabbit:direct-exchange>
	<rabbit:listener-container connection-factory="connectionFactory" acknowledge="auto">
		<rabbit:listener queues="queue3" ref="consumer3" />
	</rabbit:listener-container>

	<!-- 把消息对象转换成 json 字符串的转换器 -->
	<!-- MarshallingMessageConverter转换器，它使用Spring OXM类库(它们实现了Marshaller和Unmarshller接口)。在配置的时候，大多数情况下是在构造参数中进行配置 -->
	<!-- 
	<bean id="marshallingMessageConverter" class="org.springframework.amqp.support.converter.MarshallingMessageConverter">
		<constructor-arg ref="someImplemenationOfMarshallerAndUnmarshaller" />
	</bean>
	 -->
	<!-- JsonMessageConverter和Jackson2JsonMessageConverter默认会使用DefaultClassMapper。信息会被添加到消息属性中。如果收到的消息在消息属性中没有包含类型信息，但是你知道期望的类型，你可以通过defaultType属性进行设置 -->
	<!-- JsonMessageConverter使用org.codehaus.jackson 1.x库 -->
	<bean id="jsonMessageConverter" class="org.springframework.amqp.support.converter.JsonMessageConverter" />
	<!-- Jackson2JsonMessageConverter使用com.fasterxml.jackson 2.x库 -->
	<bean id="jackson2JsonMessageConverter" class="org.springframework.amqp.support.converter.Jackson2JsonMessageConverter" />
	<!-- 自定义Gson2JsonMessageConverter 使用 com.google.code.gson 2.x 库 -->
	<bean id="gson2JsonMessageConverter" class="com.github.converter.Gson2JsonMessageConverter" />

	<!-- 声明 rabbit template -->
	<rabbit:template id="amqpTemplate" exchange="directExchange" connection-factory="connectionFactory" message-converter="jackson2JsonMessageConverter" />

	<!-- 连接配置 -->
	<rabbit:connection-factory id="connectionFactory2" host="${mq.host}" username="${mq.username}" password="${mq.password}" port="${mq.port}" />

	<!-- 通过指定下面的 admin 信息，当前 producer 中的 exchange 和 queue 会在 rabbitmq 服务器上自动生成-->
	<rabbit:admin id="admin2" connection-factory="connectionFactory2" />

	<!-- 声明消息队列 -->
	<rabbit:queue id="queue2" name="queue2" durable="true" auto-delete="false" exclusive="false" declared-by="admin2" />

	<!-- 声明 topic 类型 exchange，即消息与一个特定的路由键完全匹配，才会转发 -->
	<rabbit:topic-exchange id="topicExchange" name="topicExchange" durable="true" auto-delete="false" declared-by="admin2">
		<!-- 设置消息队列匹配的 binding_key，可多重绑定 -->
		<rabbit:bindings>
			<rabbit:binding queue="queue2" pattern="*.info" />
		</rabbit:bindings>
	</rabbit:topic-exchange>

	<!-- 消息监听器，queues：监听的队列，多个的话用逗号（,）分隔  -->
	<rabbit:listener-container connection-factory="connectionFactory2" acknowledge="auto">
		<rabbit:listener queues="queue2" ref="consumer2" />
	</rabbit:listener-container>

	<!-- 声明 rabbit template -->
	<rabbit:template id="amqpTemplate2" exchange="topicExchange" connection-factory="connectionFactory2" />
</beans>